{"ast":null,"code":"import { CREATE_CATEGORY, ALL_CATEGORIES, FIND_CATEGORY, UPDATE_CATEGORT, DELETE_CATEGORY } from \"./types\";\nimport CategoryService from \"../../services/category.service\";\nexport const createCategory = (user_id, categoryName) => async dispatch => {\n  try {\n    const res = await CategoryService.createCategory(user_id, categoryName); //API 호출\n\n    dispatch({\n      type: CREATE_CATEGORY,\n      payload: res.data\n    });\n    return Promise.resolve(res.data); //성공\n  } catch (err) {\n    return Promise.reject(err); //실패\n  }\n};\nexport const allCategories = user_id => async dispatch => {\n  try {\n    const res = await CategoryService.allCategories(user_id);\n    dispatch({\n      type: ALL_CATEGORIES,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const findCategory = categoryName => async dispatch => {\n  try {\n    const res = await CategoryService.findCategory(categoryName);\n    dispatch({\n      type: FIND_CATEGORY,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const updateCategory = (id, data) => async dispatch => {\n  try {\n    const res = await CategoryService.updateCategory(id, data);\n    dispatch({\n      type: UPDATE_CATEGORT,\n      payload: data\n    });\n    return Promise.resolve(res.data);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n};\nexport const deleteCategory = category_id => async dispatch => {\n  try {\n    await CategoryService.deleteCategory(category_id);\n    dispatch({\n      type: DELETE_CATEGORY,\n      payload: {\n        category_id\n      }\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};","map":{"version":3,"sources":["/app/src/redux/actions/category.js"],"names":["CREATE_CATEGORY","ALL_CATEGORIES","FIND_CATEGORY","UPDATE_CATEGORT","DELETE_CATEGORY","CategoryService","createCategory","user_id","categoryName","dispatch","res","type","payload","data","Promise","resolve","err","reject","allCategories","console","log","findCategory","updateCategory","id","deleteCategory","category_id"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,cAA1B,EAA0CC,aAA1C,EAAyDC,eAAzD,EAA0EC,eAA1E,QAAiG,SAAjG;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AAIA,OAAO,MAAMC,cAAc,GAAG,CAACC,OAAD,EAAUC,YAAV,KAA2B,MAAOC,QAAP,IAAoB;AAC3E,MAAI;AACF,UAAMC,GAAG,GAAG,MAAML,eAAe,CAACC,cAAhB,CAA+BC,OAA/B,EAAwCC,YAAxC,CAAlB,CADE,CACuE;;AACzEC,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEX,eADC;AAEPY,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAFN,KAAD,CAAR;AAIA,WAAOC,OAAO,CAACC,OAAR,CAAgBL,GAAG,CAACG,IAApB,CAAP,CANE,CAMgC;AACnC,GAPD,CAOE,OAAOG,GAAP,EAAY;AACZ,WAAOF,OAAO,CAACG,MAAR,CAAeD,GAAf,CAAP,CADY,CACgB;AAC7B;AACF,CAXM;AAaP,OAAO,MAAME,aAAa,GAAIX,OAAD,IAAa,MAAOE,QAAP,IAAoB;AAC5D,MAAI;AACF,UAAMC,GAAG,GAAG,MAAML,eAAe,CAACa,aAAhB,CAA8BX,OAA9B,CAAlB;AACAE,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEV,cADC;AAEPW,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAFN,KAAD,CAAR;AAID,GAND,CAME,OAAOG,GAAP,EAAY;AACZG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACD;AACF,CAVM;AAYP,OAAO,MAAMK,YAAY,GAAIb,YAAD,IAAkB,MAAOC,QAAP,IAAoB;AAChE,MAAI;AACF,UAAMC,GAAG,GAAG,MAAML,eAAe,CAACgB,YAAhB,CAA6Bb,YAA7B,CAAlB;AACAC,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAET,aADC;AAEPU,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAFN,KAAD,CAAR;AAID,GAND,CAME,OAAOG,GAAP,EAAY;AACZG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACD;AACF,CAVM;AAYP,OAAO,MAAMM,cAAc,GAAG,CAACC,EAAD,EAAKV,IAAL,KAAc,MAAOJ,QAAP,IAAoB;AAC9D,MAAI;AACF,UAAMC,GAAG,GAAG,MAAML,eAAe,CAACiB,cAAhB,CAA+BC,EAA/B,EAAmCV,IAAnC,CAAlB;AACAJ,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAER,eADC;AAEPS,MAAAA,OAAO,EAAEC;AAFF,KAAD,CAAR;AAIA,WAAOC,OAAO,CAACC,OAAR,CAAgBL,GAAG,CAACG,IAApB,CAAP;AACD,GAPD,CAOE,OAAOG,GAAP,EAAY;AACZ,WAAOF,OAAO,CAACG,MAAR,CAAeD,GAAf,CAAP;AACD;AACF,CAXM;AAaP,OAAO,MAAMQ,cAAc,GAAIC,WAAD,IAAiB,MAAOhB,QAAP,IAAoB;AACjE,MAAI;AACF,UAAMJ,eAAe,CAACmB,cAAhB,CAA+BC,WAA/B,CAAN;AACAhB,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEP,eADC;AAEPQ,MAAAA,OAAO,EAAE;AAAEa,QAAAA;AAAF;AAFF,KAAD,CAAR;AAID,GAND,CAME,OAAOT,GAAP,EAAY;AACZG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACD;AACF,CAVM","sourcesContent":["import { CREATE_CATEGORY, ALL_CATEGORIES, FIND_CATEGORY, UPDATE_CATEGORT, DELETE_CATEGORY } from \"./types\";\nimport CategoryService from \"../../services/category.service\";\n\n\n\nexport const createCategory = (user_id, categoryName) => async (dispatch) => {\n  try {\n    const res = await CategoryService.createCategory(user_id, categoryName); //API 호출\n    dispatch({\n      type: CREATE_CATEGORY,\n      payload: res.data,\n    });\n    return Promise.resolve(res.data); //성공\n  } catch (err) {\n    return Promise.reject(err); //실패\n  }\n};\n\nexport const allCategories = (user_id) => async (dispatch) => {\n  try {\n    const res = await CategoryService.allCategories(user_id);\n    dispatch({\n      type: ALL_CATEGORIES,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const findCategory = (categoryName) => async (dispatch) => {\n  try {\n    const res = await CategoryService.findCategory(categoryName);\n    dispatch({\n      type: FIND_CATEGORY,\n      payload: res.data,\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const updateCategory = (id, data) => async (dispatch) => {\n  try {\n    const res = await CategoryService.updateCategory(id, data);\n    dispatch({\n      type: UPDATE_CATEGORT,\n      payload: data,\n    });\n    return Promise.resolve(res.data);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n};\n\nexport const deleteCategory = (category_id) => async (dispatch) => {\n  try {\n    await CategoryService.deleteCategory(category_id);\n    dispatch({\n      type: DELETE_CATEGORY,\n      payload: { category_id },\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}