{"ast":null,"code":"var _jsxFileName = \"/app/src/pages/Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Clock from 'react-live-clock';\nimport InputUnstyled from '@mui/base/InputUnstyled';\nimport { styled } from '@mui/system';\nimport { Button, Stack, Avatar, Box, ImageList, ImageListItem, IconButton, Typography, getPopoverUtilityClass } from '@mui/material';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getUser } from '../redux/actions/user';\nimport { getPost } from '../redux/actions/post'; // import Fab from '@mui/material/Fab';\n// import FavoriteIcon from '@mui/icons-material/Favorite';\n// import ShareIcon from '@mui/icons-material/Share';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Post() {\n  _s();\n\n  // 댓글 입력 창 관련\n  const blue = {\n    200: '#80BFFF',\n    400: '#3399FF'\n  };\n  const grey = {\n    50: '#F3F6F9',\n    100: '#E7EBF0',\n    200: '#E0E3E7',\n    300: '#CDD2D7',\n    400: '#B2BAC2',\n    500: '#A0AAB4',\n    600: '#6F7E8C',\n    700: '#3E5060',\n    800: '#2D3843',\n    900: '#1A2027'\n  };\n  const StyledInputElement = styled('input')(_ref => {\n    let {\n      theme\n    } = _ref;\n    return `\n    width: 500px;\n    font-size: 0.875rem;\n    font-family: IBM Plex Sans, sans-serif;\n    font-weight: 400;\n    line-height: 1.5;\n    color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n    background: ${theme.palette.mode === 'dark' ? grey[900] : grey[50]};\n    border: 1px solid ${theme.palette.mode === 'dark' ? grey[800] : grey[300]};\n    border-radius: 8px;\n    padding: 12px 12px;\n    transition: all 150ms ease;\n  \n    &:hover {\n      background: ${theme.palette.mode === 'dark' ? '' : grey[100]};\n      border-color: ${theme.palette.mode === 'dark' ? grey[700] : grey[400]};\n    }\n  \n    &:focus {\n      outline: 2px solid ${theme.palette.mode === 'dark' ? blue[400] : blue[200]};\n      outline-offset: 2px;\n    }\n  `;\n  });\n  const CustomInput = /*#__PURE__*/React.forwardRef(function CustomInput(props, ref) {\n    return /*#__PURE__*/_jsxDEV(InputUnstyled, {\n      components: {\n        Input: StyledInputElement\n      },\n      ...props,\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  });\n  const {\n    user: currentUser\n  } = useSelector(state => state.auth);\n  const data = useSelector(state => state.user);\n  const datas = useSelector(state => state.post);\n  const [userData, setUserData] = useState([]);\n  const [postData, setPostData] = useState([]);\n  const dispatch = useDispatch(); // 유저 정보 가져오기\n\n  useEffect(() => {\n    getUsers();\n    getPosts();\n  }, []);\n\n  function getUsers() {\n    dispatch(getUser(currentUser.userId)).then(data => {\n      setUserData(data);\n      console.log('data', data);\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n  console.log('datas.postId', datas.postId);\n  console.log('currentUser.userId', currentUser.userId);\n\n  function getPosts() {\n    dispatch(getPost(datas.postId)).then(datas => {\n      setPostData(datas);\n      console.log('datas', datas);\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mt: '20px',\n      width: '800px',\n      border: '1px solid pink',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      sx: {\n        py: '20px'\n      },\n      children: [datas.title, \"\\uC81C\\uBAA9 \\uB4E4\\uC5B4\\uAC08 \\uAC83\\uC784\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: '600px',\n        display: 'flex',\n        flexDirection: 'column',\n        p: 0.5,\n        alignItems: 'end'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        children: data.nickname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Clock, {\n        format: 'YYYY-MM-DD HH:mm',\n        ticking: true,\n        timezone: 'KR/pacific'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"\\uD3C9\\uC18C\\uC5D0 \\uC0AC\\uC9C4 \\uCC0D\\uB294 \\uAC78 \\uC88B\\uC544\\uD574\\uC11C \\uC81C\\uAC00 \\uCC0D\\uC740 \\uC0AC\\uC9C4\\uC774\\uC5D0\\uC694~\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FzM3mp%2Fbtrr3oghEUP%2FboYYynkXF9FjhuqxFUSe41%2Fimg.png\",\n      width: \"600px\",\n      height: \"400px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"\\uAC8C\\uC2DC\\uBB3C \\uB0B4\\uC6A9 \\uCC44\\uC6B0\\uAE30\\uC6A9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: '500px',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'flex-start',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        alt: \"jiwoon-joo\",\n        src: data.profilePhoto,\n        sx: {\n          width: 80,\n          height: 80,\n          mr: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 1,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: data.nickname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h7\",\n          children: data.introduce\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      spacing: 1,\n      sx: {\n        my: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(CustomInput, {\n        \"aria-label\": \"Demo input\",\n        placeholder: \"\\uB313\\uAE00\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        sx: {\n          backgroundColor: '#ff5f70',\n          color: 'white',\n          ':hover': {\n            bgcolor: '#ffc0cb'\n          }\n        },\n        children: \"\\uB4F1\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Post, \"3Djbw/WQM19FrJcBaCsIIT4hMZ8=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/app/src/pages/Post.js"],"names":["React","useState","useEffect","Clock","InputUnstyled","styled","Button","Stack","Avatar","Box","ImageList","ImageListItem","IconButton","Typography","getPopoverUtilityClass","AddCircleIcon","useSelector","useDispatch","getUser","getPost","Post","blue","grey","StyledInputElement","theme","palette","mode","CustomInput","forwardRef","props","ref","Input","user","currentUser","state","auth","data","datas","post","userData","setUserData","postData","setPostData","dispatch","getUsers","getPosts","userId","then","console","log","catch","error","postId","mt","width","border","display","flexDirection","alignItems","py","title","p","nickname","justifyContent","profilePhoto","height","mr","introduce","my","backgroundColor","color","bgcolor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Clock from 'react-live-clock'\n\nimport InputUnstyled from '@mui/base/InputUnstyled';\nimport { styled } from '@mui/system';\nimport { Button, Stack, Avatar, Box, ImageList, ImageListItem, IconButton, Typography, getPopoverUtilityClass } from '@mui/material';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getUser } from '../redux/actions/user';\nimport { getPost } from '../redux/actions/post';\n// import Fab from '@mui/material/Fab';\n// import FavoriteIcon from '@mui/icons-material/Favorite';\n// import ShareIcon from '@mui/icons-material/Share';\n\n\n\nexport default function Post() {\n\n  // 댓글 입력 창 관련\n  const blue = {\n    200: '#80BFFF',\n    400: '#3399FF',\n  };\n  const grey = {\n    50: '#F3F6F9',\n    100: '#E7EBF0',\n    200: '#E0E3E7',\n    300: '#CDD2D7',\n    400: '#B2BAC2',\n    500: '#A0AAB4',\n    600: '#6F7E8C',\n    700: '#3E5060',\n    800: '#2D3843',\n    900: '#1A2027',\n  };\n  const StyledInputElement = styled('input')(\n    ({ theme }) => `\n    width: 500px;\n    font-size: 0.875rem;\n    font-family: IBM Plex Sans, sans-serif;\n    font-weight: 400;\n    line-height: 1.5;\n    color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n    background: ${theme.palette.mode === 'dark' ? grey[900] : grey[50]};\n    border: 1px solid ${theme.palette.mode === 'dark' ? grey[800] : grey[300]};\n    border-radius: 8px;\n    padding: 12px 12px;\n    transition: all 150ms ease;\n  \n    &:hover {\n      background: ${theme.palette.mode === 'dark' ? '' : grey[100]};\n      border-color: ${theme.palette.mode === 'dark' ? grey[700] : grey[400]};\n    }\n  \n    &:focus {\n      outline: 2px solid ${theme.palette.mode === 'dark' ? blue[400] : blue[200]};\n      outline-offset: 2px;\n    }\n  `,\n  );\n  const CustomInput = React.forwardRef(function CustomInput(props, ref) {\n    return (\n      <InputUnstyled components={{ Input: StyledInputElement }} {...props} ref={ref} />\n    );\n  });\n  \n  const { user: currentUser } = useSelector((state) => state.auth);\n  const data = useSelector((state) => state.user);\n  const datas = useSelector((state) => state.post);\n  const [ userData, setUserData ] = useState([]);\n  const [ postData, setPostData ] = useState([]);\n\n  const dispatch = useDispatch();\n\n  // 유저 정보 가져오기\n  useEffect(() => {\n    getUsers();\n    getPosts();\n  }, []);\n\n  function getUsers() {\n    dispatch(getUser(currentUser.userId))\n    .then((data) => {\n      setUserData(data);\n      console.log('data', data);\n    })\n    .catch((error) => {\n      console.error(error);\n    })\n  }\n  console.log('datas.postId', datas.postId);\n  console.log('currentUser.userId', currentUser.userId)\n\n  function getPosts() {\n    dispatch(getPost(datas.postId))\n    .then((datas) => {\n      setPostData(datas);\n      console.log('datas', datas);\n    })\n    .catch((error) => {\n      console.error(error);\n    })\n  }\n\n  return(\n    <Box\n      sx={{\n        mt: '20px',\n        width: '800px',\n        border: '1px solid pink',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n      }}\n    >\n      {/* 타이틀 */}\n      <Typography variant=\"h4\" sx={{ py: '20px' }}>{datas.title}제목 들어갈 것임</Typography>\n\n      {/* 작성자 */}\n      <Box sx={{ \n        width: '600px',\n        display: 'flex', \n        flexDirection: 'column', \n        p: 0.5, \n        alignItems: 'end' \n        }}\n      >\n        <Typography >{data.nickname}</Typography>\n        {/* 작성시간으로 수정해야함 */}\n        <Clock format = {'YYYY-MM-DD HH:mm'} ticking = {true} timezone = {'KR/pacific'} />\n      </Box>\n\n      {/* 내용 */}\n      <h4>평소에 사진 찍는 걸 좋아해서 제가 찍은 사진이에요~</h4>\n      <img src=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FzM3mp%2Fbtrr3oghEUP%2FboYYynkXF9FjhuqxFUSe41%2Fimg.png\" width='600px' height='400px' />\n      <h4>게시물 내용 채우기용</h4>\n\n      {/* 하단 작성자 프로필사진, 이름, 설명 */}\n      <Box \n        sx={{ \n          width: '500px',\n          display: 'flex', \n          flexDirection: 'row',\n          justifyContent: 'flex-start',\n          alignItems: 'center',\n        }}\n      >\n        <Avatar alt=\"jiwoon-joo\" src={data.profilePhoto} sx={{ width: 80, height: 80, mr: '10px' }}/>\n        <Stack spacing={1}>\n          <Typography variant=\"h6\" >{data.nickname}</Typography>\n          <Typography variant=\"h7\" >{data.introduce}</Typography>\n        </Stack>\n      </Box>\n\n      \n      {/* 댓글 입력 */}\n      <Stack direction=\"row\" spacing={1} sx={{ my: 3 }}>\n        <CustomInput aria-label=\"Demo input\" placeholder=\"댓글을 입력해주세요\" />\n        <Button size=\"small\" sx={{ backgroundColor: '#ff5f70', color: 'white', ':hover': { bgcolor: '#ffc0cb'}}}>등록</Button>\n      </Stack>\n\n    </Box>\n  );   \n}"]},"metadata":{},"sourceType":"module"}