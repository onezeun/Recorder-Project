{"ast":null,"code":"var _jsxFileName = \"/Users/modsiw/Programming/Recorder-Project/backend/frontend/src/pages/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { loginUser } from '../components/Login/actions/action';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { FormControlLabel, Checkbox } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const [Email, setEmail] = useState('');\n  const [Password, setPassword] = useState('');\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    console.log('Email', Email);\n    console.log('Password', Password);\n    let body = {\n      email: Email,\n      password: Password\n    }; // action의 반환값을 dispatch\n\n    dispatch(loginUser(body)).then(response => {\n      if (response.payload.loginSuccess) {\n        props.history.push('/'); // 페이지 이동\n      } else {\n        alert('로그인 실패');\n      }\n    });\n  };\n\n  const onEmailHandler = e => {\n    setEmail(e.target.value);\n  };\n\n  const onPasswordHandler = e => {\n    setPassword(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    gap: 1,\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      width: '100vw',\n      height: '100vh',\n      backgroundColor: 'white'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Record:er\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        '& > :not(style)': {\n          m: 1,\n          width: '35ch'\n        }\n      },\n      noValidate: true,\n      autoComplete: \"off\",\n      onSubmit: onSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-basic\",\n        label: \"\\uC774\\uBA54\\uC77C\",\n        variant: \"outlined\",\n        autoComplete: \"email\",\n        autoFocus: true,\n        onChange: onEmailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-password-input\",\n        label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n        type: \"password\",\n        autoComplete: \"current-password\",\n        onChange: onPasswordHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          '& > *': {\n            m: 1,\n            width: '35ch'\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            value: \"\\uB85C\\uADF8\\uC778 \\uC815\\uBCF4 \\uAE30\\uC5B5\\uD558\\uAE30\",\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 26\n          }, this),\n          label: \"Remember\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          '& > *': {\n            m: 1,\n            width: '35ch'\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          type: \"submit\",\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        '& > *': {\n          m: 1\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"text\",\n        children: \"\\uD68C\\uC6D0 \\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"text\",\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uCC3E\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"bvOcjv5lMva+M6t5n9wEXJ6iFVU=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/modsiw/Programming/Recorder-Project/backend/frontend/src/pages/Login.js"],"names":["React","useEffect","useState","useDispatch","loginUser","Box","TextField","Button","FormControlLabel","Checkbox","Login","props","dispatch","Email","setEmail","Password","setPassword","onSubmitHandler","e","preventDefault","console","log","body","email","password","then","response","payload","loginSuccess","history","push","alert","onEmailHandler","target","value","onPasswordHandler","display","flexDirection","justifyContent","alignItems","width","height","backgroundColor","m"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux'\nimport { loginUser } from '../components/Login/actions/action';\n\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { FormControlLabel, Checkbox } from '@mui/material';\n\nexport default function Login(props) {\n\n    const dispatch = useDispatch();\n    const [Email, setEmail] = useState('');\n    const [Password, setPassword] = useState('');\n\n    const onSubmitHandler = (e) => {\n        e.preventDefault();\n        console.log('Email', Email);\n        console.log('Password', Password);\n\n        let body = {\n            email: Email,\n            password: Password\n        }\n    \n        // action의 반환값을 dispatch\n        dispatch(loginUser(body))\n        .then(response => {\n            if(response.payload.loginSuccess) {\n                props.history.push('/')                // 페이지 이동\n            } else{\n                alert('로그인 실패')\n            }\n        })\n    }\n\n    const onEmailHandler = (e) => {\n        setEmail(e.target.value);\n    }\n\n    const onPasswordHandler = (e) => {\n        setPassword(e.target.value);\n    }\n    \n    \n\n  return (\n    <Box\n            gap={1}\n            sx={{ \n                display: 'flex',\n                flexDirection: 'column', \n                justifyContent: 'center',\n                alignItems: 'center',\n                width: '100vw',\n                height: '100vh',\n                backgroundColor: 'white',\n            }}\n            >\n            \n            <h2>Record:er</h2>\n\n        <Box\n            component=\"form\"\n            sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                '& > :not(style)': { m: 1, width: '35ch' },\n            }}\n            noValidate\n            autoComplete=\"off\"\n            onSubmit={onSubmitHandler}\n            >\n             <TextField \n             id=\"outlined-basic\"\n             label=\"이메일\"\n             variant=\"outlined\"\n             autoComplete=\"email\"\n             autoFocus\n             onChange = {onEmailHandler}\n             />  \n            <TextField\n            id=\"outlined-password-input\"\n            label=\"비밀번호\"      \n            type=\"password\"\n            autoComplete=\"current-password\"\n            onChange = {onPasswordHandler}\n            />\n\n            {/* 로그인 정보 기억 */}\n            <Box\n            sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            '& > *': {\n                m: 1, width: '35ch'\n            },\n            }}\n            >\n            <FormControlLabel\n                control={<Checkbox value=\"로그인 정보 기억하기\"\n                color=\"primary\" />}\n                label=\"Remember\"                          \n            />\n            </Box>\n\n            {/* 로그인 버튼 */}\n            <Box\n            sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            '& > *': {\n                m: 1, width: '35ch'\n            },\n            }}\n            >\n            <Button variant=\"contained\" type=\"submit\">로그인</Button>\n            </Box>\n        </Box>\n\n            <Box\n            sx={{\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'center',\n            '& > *': {\n                m: 1,\n            },\n            }}\n            >\n            <Button variant=\"text\">회원 가입</Button>\n            <Button variant=\"text\">비밀번호 찾기</Button>\n            </Box>\n  </Box>\n  );\n}"]},"metadata":{},"sourceType":"module"}