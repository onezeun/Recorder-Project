{"ast":null,"code":"var _jsxFileName = \"/Users/modsiw/Programming/Recorder-Project/frontend/src/components/Category/Category.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { createCategory, allCategories, findCategory, updateCategory, deleteCategory } from '../../redux/actions/category';\nimport { ListItem, Box, IconButton, Input, FormControl, TextField, InputAdornment, Stack } from '@mui/material';\nimport List from '@mui/material/List';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport Tooltip from '@mui/material/Tooltip';\nimport Settings from '@mui/icons-material/Settings';\nimport ArrowRight from '@mui/icons-material/ArrowRight';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport AddIcon from '@mui/icons-material/Add';\nimport CheckIcon from '@mui/icons-material/Check';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Category() {\n  _s();\n\n  const dispatch = useDispatch();\n  const [categories, setCategories] = useState([]);\n  const [categoryName, setCategoryName] = useState('');\n  const {\n    data\n  } = useSelector(state => state.category);\n  const {\n    isLoggedIn\n  } = useSelector(state => state.auth);\n  const [edit, setEdit] = useState(false);\n  const {\n    user: currentUser\n  } = useSelector(state => state.auth);\n  const {\n    userId\n  } = useParams(); // 조회\n\n  useEffect(() => {\n    getCategories();\n    console.log(data);\n  }, []);\n\n  function getCategories() {\n    dispatch(allCategories(userId)).then(data => {\n      setCategories(data);\n    }).catch(error => {\n      console.error(error);\n    });\n  } //추가\n\n\n  function addCategory() {\n    const addCategory = () => {\n      dispatch(createCategory(userId, categoryName)).then(response => {\n        console.log(response.data);\n        setCategoryName('');\n      }).catch(error => {\n        console.error(error);\n      });\n    };\n\n    addCategory();\n    window.location.reload();\n  }\n\n  function changeCategory(e) {\n    e.preventDefault();\n    setCategoryName(e.target.value);\n  } // 수정\n\n\n  function putCategory() {\n    const putCategory = () => {\n      dispatch(updateCategory(data.categoryId)).then(() => {}).catch(error => {\n        console.error(error);\n      });\n    };\n\n    putCategory();\n    console.log('카테고리 수정');\n  } // 삭제\n\n\n  const removeCategory = () => {\n    dispatch(deleteCategory(data.categoryId)).then(() => {\n      getCategories();\n    }).catch(error => {\n      console.error(error);\n    });\n  }; // const onToggle = useCallback(categoryId => dispatch(deleteCategory(categoryId),[dispatch]))\n  // const removeCategory = (category) => {\n  //   onToggle(category.categoryId)\n  // }\n  // 저장\n\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(ListItem, {\n      component: \"div\",\n      disablePadding: true,\n      children: [/*#__PURE__*/_jsxDEV(ListItemButton, {\n        sx: {\n          height: 56\n        },\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"\\uC804\\uCCB4\\uBCF4\\uAE30\",\n          primaryTypographyProps: {\n            fontWeight: 'bold',\n            variant: 'botton'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), isLoggedIn ? !edit ? /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"\\uCE74\\uD14C\\uACE0\\uB9AC \\uC124\\uC815\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => setEdit({\n            edit: !edit\n          }),\n          size: \"large\",\n          sx: {\n            '& svg': {\n              transition: '0.2s',\n              transform: 'translateX(0) rotate(0)'\n            },\n            '&:hover, &:focus': {\n              bgcolor: 'unset',\n              '& svg:first-of-type': {\n                transform: 'translateX(-4px) rotate(-20deg)'\n              },\n              '& svg:last-of-type': {\n                right: 0,\n                opacity: 1\n              }\n            },\n            '&:after': {\n              content: '\"\"',\n              position: 'absolute',\n              height: '80%',\n              display: 'block',\n              left: 0,\n              width: '1px',\n              bgcolor: 'divider'\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(Settings, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ArrowRight, {\n            sx: {\n              position: 'absolute',\n              right: 4,\n              opacity: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"\\uC800\\uC7A5\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"large\",\n          sx: {\n            '&:after': {\n              content: '\"\"',\n              position: 'absolute',\n              height: '80%',\n              display: 'block',\n              left: 0,\n              width: '1px',\n              bgcolor: 'divider'\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), isLoggedIn ? !edit ? null : /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      spacing: 2,\n      sx: {\n        px: 0.5,\n        pt: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        onChange: changeCategory,\n        size: \"small\",\n        label: \"\\uCE74\\uD14C\\uACE0\\uB9AC \\uCD94\\uAC00\",\n        variant: \"outlined\",\n        placeholder: \"\\uCE74\\uD14C\\uACE0\\uB9AC\\uBA85\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: addCategory,\n        children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this) : null, /*#__PURE__*/_jsxDEV(List, {\n      sx: {\n        width: '100%',\n        maxWidth: 360,\n        bgcolor: 'background.paper'\n      },\n      component: \"nav\",\n      \"aria-labelledby\": \"nested-list-subheader\",\n      children: data && data.map(category => {\n        if (!edit) {\n          return /*#__PURE__*/_jsxDEV(ListItemButton, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              onRemove: removeCategory,\n              primary: category.categoryName,\n              primaryTypographyProps: {\n                variant: 'botton'\n              },\n              sx: {\n                fontSize: 15\n              }\n            }, category.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(FormControl, {\n            sx: {\n              m: 1,\n              width: '20ch'\n            },\n            variant: \"standard\",\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              defaultValue: category.categoryName,\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: putCategory,\n                  children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => removeCategory(category.categoryId),\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 17\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Category, \"u7BkpPXY1qEKCHA730dWGzxUkIw=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useParams];\n});\n\n_c = Category;\n\nvar _c;\n\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"sources":["/Users/modsiw/Programming/Recorder-Project/frontend/src/components/Category/Category.js"],"names":["React","useState","useEffect","useCallback","useDispatch","useSelector","useParams","createCategory","allCategories","findCategory","updateCategory","deleteCategory","ListItem","Box","IconButton","Input","FormControl","TextField","InputAdornment","Stack","List","ListItemButton","ListItemText","Tooltip","Settings","ArrowRight","DeleteIcon","EditIcon","AddIcon","CheckIcon","Category","dispatch","categories","setCategories","categoryName","setCategoryName","data","state","category","isLoggedIn","auth","edit","setEdit","user","currentUser","userId","getCategories","console","log","then","catch","error","addCategory","response","window","location","reload","changeCategory","e","preventDefault","target","value","putCategory","categoryId","removeCategory","height","fontWeight","variant","transition","transform","bgcolor","right","opacity","content","position","display","left","width","px","pt","maxWidth","map","fontSize","id","m"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SACEC,cADF,EAEEC,aAFF,EAGEC,YAHF,EAIEC,cAJF,EAKEC,cALF,QAMO,8BANP;AAQA,SAASC,QAAT,EAAmBC,GAAnB,EAAwBC,UAAxB,EAAoCC,KAApC,EAA2CC,WAA3C,EAAwDC,SAAxD,EAAmEC,cAAnE,EAAmFC,KAAnF,QAAgG,eAAhG;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAMC,QAAQ,GAAG3B,WAAW,EAA5B;AACA,QAAM,CAAC4B,UAAD,EAAaC,aAAb,IAA8BhC,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACiC,YAAD,EAAeC,eAAf,IAAkClC,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM;AAAEmC,IAAAA;AAAF,MAAW/B,WAAW,CAAEgC,KAAD,IAAWA,KAAK,CAACC,QAAlB,CAA5B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAiBlC,WAAW,CAAEgC,KAAD,IAAWA,KAAK,CAACG,IAAlB,CAAlC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBzC,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM;AAAE0C,IAAAA,IAAI,EAAEC;AAAR,MAAwBvC,WAAW,CAAEgC,KAAD,IAAWA,KAAK,CAACG,IAAlB,CAAzC;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAavC,SAAS,EAA5B,CARiC,CAUjC;;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACd4C,IAAAA,aAAa;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,WAASU,aAAT,GAA0B;AACxBf,IAAAA,QAAQ,CAACvB,aAAa,CAACqC,MAAD,CAAd,CAAR,CACCI,IADD,CACOb,IAAD,IAAU;AACdH,MAAAA,aAAa,CAACG,IAAD,CAAb;AACD,KAHD,EAICc,KAJD,CAIQC,KAAD,IAAW;AAChBJ,MAAAA,OAAO,CAACI,KAAR,CAAcA,KAAd;AACD,KAND;AAOD,GAxBgC,CA0BjC;;;AACA,WAASC,WAAT,GAAwB;AACtB,UAAMA,WAAW,GAAG,MAAM;AACxBrB,MAAAA,QAAQ,CAACxB,cAAc,CAACsC,MAAD,EAASX,YAAT,CAAf,CAAR,CACCe,IADD,CACOI,QAAD,IAAc;AAClBN,QAAAA,OAAO,CAACC,GAAR,CAAYK,QAAQ,CAACjB,IAArB;AACAD,QAAAA,eAAe,CAAC,EAAD,CAAf;AACD,OAJD,EAKCe,KALD,CAKQC,KAAD,IAAW;AAChBJ,QAAAA,OAAO,CAACI,KAAR,CAAcA,KAAd;AACD,OAPD;AAQD,KATD;;AAUAC,IAAAA,WAAW;AACXE,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD;;AAED,WAASC,cAAT,CAAyBC,CAAzB,EAA4B;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACAxB,IAAAA,eAAe,CAACuB,CAAC,CAACE,MAAF,CAASC,KAAV,CAAf;AACD,GA7CgC,CAgDjC;;;AACA,WAASC,WAAT,GAAwB;AACtB,UAAMA,WAAW,GAAG,MAAM;AACxB/B,MAAAA,QAAQ,CAACrB,cAAc,CAAC0B,IAAI,CAAC2B,UAAN,CAAf,CAAR,CACCd,IADD,CACM,MAAM,CACX,CAFD,EAGCC,KAHD,CAGQC,KAAD,IAAW;AAChBJ,QAAAA,OAAO,CAACI,KAAR,CAAcA,KAAd;AACD,OALD;AAMD,KAPD;;AAQAW,IAAAA,WAAW;AACXf,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,GA5DgC,CA8DjC;;;AACA,QAAMgB,cAAc,GAAG,MAAM;AAC3BjC,IAAAA,QAAQ,CAACpB,cAAc,CAACyB,IAAI,CAAC2B,UAAN,CAAf,CAAR,CACCd,IADD,CACM,MAAM;AACVH,MAAAA,aAAa;AACd,KAHD,EAICI,KAJD,CAIQC,KAAD,IAAW;AAChBJ,MAAAA,OAAO,CAACI,KAAR,CAAcA,KAAd;AACD,KAND;AAOD,GARD,CA/DiC,CAyEjC;AACA;AACA;AACA;AACA;;;AAEA,sBACE,QAAC,GAAD;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,SAAS,EAAC,KAApB;AAA0B,MAAA,cAAc,MAAxC;AAAA,8BACE,QAAC,cAAD;AAAgB,QAAA,EAAE,EAAE;AAAEc,UAAAA,MAAM,EAAE;AAAV,SAApB;AAAA,+BACE,QAAC,YAAD;AACE,UAAA,OAAO,EAAC,0BADV;AAEE,UAAA,sBAAsB,EAAE;AACtBC,YAAAA,UAAU,EAAE,MADU;AAEtBC,YAAAA,OAAO,EAAE;AAFa;AAF1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,EAUG5B,UAAU,GACT,CAACE,IAAD,gBACE,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,uCAAf;AAAA,+BACE,QAAC,UAAD;AACE,UAAA,OAAO,EAAE,MAAMC,OAAO,CAAC;AAAED,YAAAA,IAAI,EAAE,CAACA;AAAT,WAAD,CADxB;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,EAAE,EAAE;AACF,qBAAS;AACP2B,cAAAA,UAAU,EAAE,MADL;AAEPC,cAAAA,SAAS,EAAE;AAFJ,aADP;AAKF,gCAAoB;AAClBC,cAAAA,OAAO,EAAE,OADS;AAElB,qCAAuB;AACrBD,gBAAAA,SAAS,EAAE;AADU,eAFL;AAKlB,oCAAsB;AACpBE,gBAAAA,KAAK,EAAE,CADa;AAEpBC,gBAAAA,OAAO,EAAE;AAFW;AALJ,aALlB;AAeF,uBAAW;AACTC,cAAAA,OAAO,EAAE,IADA;AAETC,cAAAA,QAAQ,EAAE,UAFD;AAGTT,cAAAA,MAAM,EAAE,KAHC;AAITU,cAAAA,OAAO,EAAE,OAJA;AAKTC,cAAAA,IAAI,EAAE,CALG;AAMTC,cAAAA,KAAK,EAAE,KANE;AAOTP,cAAAA,OAAO,EAAE;AAPA;AAfT,WAHN;AAAA,kCA6BE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,kBA7BF,eA8BE,QAAC,UAAD;AACE,YAAA,EAAE,EAAE;AAAEI,cAAAA,QAAQ,EAAE,UAAZ;AAAwBH,cAAAA,KAAK,EAAE,CAA/B;AAAkCC,cAAAA,OAAO,EAAE;AAA3C;AADN;AAAA;AAAA;AAAA;AAAA,kBA9BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,gBAsCE,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,cAAf;AAAA,+BACE,QAAC,UAAD;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,EAAE,EAAE;AACF,uBAAW;AACTC,cAAAA,OAAO,EAAE,IADA;AAETC,cAAAA,QAAQ,EAAE,UAFD;AAGTT,cAAAA,MAAM,EAAE,KAHC;AAITU,cAAAA,OAAO,EAAE,OAJA;AAKTC,cAAAA,IAAI,EAAE,CALG;AAMTC,cAAAA,KAAK,EAAE,KANE;AAOTP,cAAAA,OAAO,EAAE;AAPA;AADT,WAFN;AAAA,iCAcE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAdF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAvCO,GA0DP,IApEN;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAuEG/B,UAAU,GACP,CAACE,IAAD,GAAQ,IAAR,gBACE,QAAC,KAAD;AAAO,MAAA,SAAS,EAAC,KAAjB;AAAuB,MAAA,OAAO,EAAE,CAAhC;AAAmC,MAAA,EAAE,EAAE;AAAEqC,QAAAA,EAAE,EAAE,GAAN;AAAWC,QAAAA,EAAE,EAAE;AAAf,OAAvC;AAAA,8BACE,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAEtB,cAArB;AAAqC,QAAA,IAAI,EAAC,OAA1C;AAAkD,QAAA,KAAK,EAAC,uCAAxD;AAAkE,QAAA,OAAO,EAAC,UAA1E;AAAqF,QAAA,WAAW,EAAC;AAAjG;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAEL,WAArB;AAAA,+BAAkC,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFK,GAMF,IA7EX,eA8EE,QAAC,IAAD;AACE,MAAA,EAAE,EAAE;AAAEyB,QAAAA,KAAK,EAAE,MAAT;AAAiBG,QAAAA,QAAQ,EAAE,GAA3B;AAAgCV,QAAAA,OAAO,EAAE;AAAzC,OADN;AAEE,MAAA,SAAS,EAAC,KAFZ;AAGE,yBAAgB,uBAHlB;AAAA,gBAKGlC,IAAI,IACHA,IAAI,CAAC6C,GAAL,CAAU3C,QAAD,IAAc;AACrB,YAAI,CAACG,IAAL,EAAW;AACT,8BACE,QAAC,cAAD;AAAA,mCACE,QAAC,YAAD;AACE,cAAA,QAAQ,EAAEuB,cADZ;AAGE,cAAA,OAAO,EAAE1B,QAAQ,CAACJ,YAHpB;AAIE,cAAA,sBAAsB,EAAE;AACtBiC,gBAAAA,OAAO,EAAE;AADa,eAJ1B;AAOE,cAAA,EAAE,EAAE;AAAEe,gBAAAA,QAAQ,EAAE;AAAZ;AAPN,eAEO5C,QAAQ,CAAC6C,EAFhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF;AAaD,SAdD,MAcO;AACL,8BACE,QAAC,WAAD;AAAa,YAAA,EAAE,EAAE;AAAEC,cAAAA,CAAC,EAAE,CAAL;AAAQP,cAAAA,KAAK,EAAE;AAAf,aAAjB;AAA0C,YAAA,OAAO,EAAC,UAAlD;AAAA,mCACE,QAAC,KAAD;AACE,cAAA,YAAY,EAAEvC,QAAQ,CAACJ,YADzB;AAEE,cAAA,YAAY,eACV,QAAC,cAAD;AAAgB,gBAAA,QAAQ,EAAC,KAAzB;AAAA,wCACE,QAAC,UAAD;AAAY,kBAAA,OAAO,EAAE4B,WAArB;AAAA,yCACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBADF,eAIE,QAAC,UAAD;AAAY,kBAAA,OAAO,EAAE,MAAKE,cAAc,CAAC1B,QAAQ,CAACyB,UAAV,CAAxC;AAAA,yCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF;AAiBD;AACF,OAlCD;AANJ;AAAA;AAAA;AAAA;AAAA,YA9EF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2HD;;GA1MuBjC,Q;UACL1B,W,EAGAC,W,EACMA,W,EAEOA,W,EACXC,S;;;KARGwB,Q","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport {\n  createCategory,\n  allCategories,\n  findCategory,\n  updateCategory,\n  deleteCategory,\n} from '../../redux/actions/category';\n\nimport { ListItem, Box, IconButton, Input, FormControl, TextField, InputAdornment, Stack } from '@mui/material';\nimport List from '@mui/material/List';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport Tooltip from '@mui/material/Tooltip';\nimport Settings from '@mui/icons-material/Settings';\nimport ArrowRight from '@mui/icons-material/ArrowRight';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport AddIcon from '@mui/icons-material/Add';\nimport CheckIcon from '@mui/icons-material/Check';\n\nexport default function Category() {\n  const dispatch = useDispatch();\n  const [categories, setCategories] = useState([]);\n  const [categoryName, setCategoryName] = useState('');\n  const { data } = useSelector((state) => state.category);\n  const { isLoggedIn } = useSelector((state) => state.auth);\n  const [edit, setEdit] = useState(false);\n  const { user: currentUser } = useSelector((state) => state.auth);\n  const { userId } = useParams();\n\n  // 조회\n  useEffect(() => {\n    getCategories();\n    console.log(data)\n  }, []);\n\n  function getCategories () {\n    dispatch(allCategories(userId))\n    .then((data) => {\n      setCategories(data);\n    })\n    .catch((error) => {\n      console.error(error)\n    })\n  }\n\n  //추가\n  function addCategory () {\n    const addCategory = () => {\n      dispatch(createCategory(userId, categoryName))\n      .then((response) => {\n        console.log(response.data)\n        setCategoryName('');\n      })\n      .catch((error) => {\n        console.error(error);\n      })\n    }\n    addCategory();\n    window.location.reload();\n  }\n\n  function changeCategory (e) {\n    e.preventDefault();\n    setCategoryName(e.target.value);\n  }\n\n\n  // 수정\n  function putCategory () {\n    const putCategory = () => {\n      dispatch(updateCategory(data.categoryId))\n      .then(() => {\n      })\n      .catch((error) => {\n        console.error(error);\n      })\n    }\n    putCategory();\n    console.log('카테고리 수정')\n  }\n\n  // 삭제\n  const removeCategory = () => {\n    dispatch(deleteCategory(data.categoryId))\n    .then(() => {\n      getCategories();\n    })\n    .catch((error) => {\n      console.error(error);\n    })\n  }\n\n  // const onToggle = useCallback(categoryId => dispatch(deleteCategory(categoryId),[dispatch]))\n  // const removeCategory = (category) => {\n  //   onToggle(category.categoryId)\n  // }\n  // 저장\n\n  return (\n    <Box>\n      <ListItem component=\"div\" disablePadding>\n        <ListItemButton sx={{ height: 56 }}>\n          <ListItemText\n            primary=\"전체보기\"\n            primaryTypographyProps={{\n              fontWeight: 'bold',\n              variant: 'botton'\n            }}\n          />\n        </ListItemButton>\n        {isLoggedIn ? (\n          !edit ? (\n            <Tooltip title=\"카테고리 설정\">\n              <IconButton\n                onClick={() => setEdit({ edit: !edit })}\n                size=\"large\"\n                sx={{\n                  '& svg': {\n                    transition: '0.2s',\n                    transform: 'translateX(0) rotate(0)',\n                  },\n                  '&:hover, &:focus': {\n                    bgcolor: 'unset',\n                    '& svg:first-of-type': {\n                      transform: 'translateX(-4px) rotate(-20deg)',\n                    },\n                    '& svg:last-of-type': {\n                      right: 0,\n                      opacity: 1,\n                    },\n                  },\n                  '&:after': {\n                    content: '\"\"',\n                    position: 'absolute',\n                    height: '80%',\n                    display: 'block',\n                    left: 0,\n                    width: '1px',\n                    bgcolor: 'divider',\n                  },\n                }}\n              >\n                <Settings />\n                <ArrowRight\n                  sx={{ position: 'absolute', right: 4, opacity: 0 }}\n                />\n              </IconButton>\n            </Tooltip>\n          ) : (\n            <Tooltip title=\"저장\">\n              <IconButton\n                size=\"large\"\n                sx={{\n                  '&:after': {\n                    content: '\"\"',\n                    position: 'absolute',\n                    height: '80%',\n                    display: 'block',\n                    left: 0,\n                    width: '1px',\n                    bgcolor: 'divider',\n                  },\n                }}\n              >\n                <CheckIcon />\n              </IconButton>\n            </Tooltip>\n          )\n        ) : null}\n      </ListItem>\n      {isLoggedIn ? (\n          !edit ? null : (\n            <Stack direction=\"row\" spacing={2} sx={{ px: 0.5, pt: 1 }}>\n              <TextField onChange={changeCategory} size=\"small\" label=\"카테고리 추가\" variant=\"outlined\" placeholder=\"카테고리명을 입력해주세요\"/>\n              <IconButton onClick={addCategory}><AddIcon/></IconButton>\n            </Stack>\n          )) : null}\n      <List\n        sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}\n        component=\"nav\"\n        aria-labelledby=\"nested-list-subheader\"\n      >\n        {data &&\n          data.map((category) => {\n            if (!edit) {\n              return (\n                <ListItemButton>\n                  <ListItemText\n                    onRemove={removeCategory}\n                    key={category.id}\n                    primary={category.categoryName}\n                    primaryTypographyProps={{\n                      variant: 'botton'\n                    }}\n                    sx={{ fontSize: 15 }}\n                  />\n                </ListItemButton>\n              );\n            } else {\n              return (\n                <FormControl sx={{ m: 1, width: '20ch' }} variant=\"standard\">\n                  <Input\n                    defaultValue={category.categoryName}\n                    endAdornment={\n                      <InputAdornment position=\"end\">\n                        <IconButton onClick={putCategory}>\n                          <EditIcon />\n                        </IconButton>\n                        <IconButton onClick={()=> removeCategory(category.categoryId)}>\n                          <DeleteIcon />\n                        </IconButton>\n                      </InputAdornment>\n                    }\n                  />\n                </FormControl>\n              );\n            }\n          })}\n      </List>\n    </Box>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}