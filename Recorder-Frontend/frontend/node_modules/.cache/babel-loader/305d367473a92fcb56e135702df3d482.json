{"ast":null,"code":"import { CREATE_CATEGORY, ALL_CATEGORIES, FIND_CATEGORY, UPDATE_CATEGORT, DELETE_CATEGORY } from '../actions/types';\nconst initialState = [];\nexport default function categoryReducer() {\n  let category = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case CREATE_CATEGORY:\n      return [...category, payload];\n\n    case ALL_CATEGORIES:\n      return payload;\n\n    case FIND_CATEGORY:\n      return payload;\n\n    case UPDATE_CATEGORT:\n      return category.map(category => {\n        if (category.id === payload.id) {\n          return { ...category,\n            ...payload\n          };\n        } else {\n          return category;\n        }\n      });\n\n    case DELETE_CATEGORY:\n      return category.filter(_ref => {\n        let {\n          category_id\n        } = _ref;\n        return category_id !== payload.category_id;\n      });\n\n    default:\n      return category;\n  }\n}\n;","map":{"version":3,"sources":["/Users/modsiw/Programming/Recorder-Project/frontend/src/redux/reducers/category.js"],"names":["CREATE_CATEGORY","ALL_CATEGORIES","FIND_CATEGORY","UPDATE_CATEGORT","DELETE_CATEGORY","initialState","categoryReducer","category","action","type","payload","map","id","filter","category_id"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,cAA1B,EAA0CC,aAA1C,EAAyDC,eAAzD,EAA0EC,eAA1E,QAAiG,kBAAjG;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA,eAAe,SAASC,eAAT,GAA0D;AAAA,MAAjCC,QAAiC,uEAAtBF,YAAsB;AAAA,MAARG,MAAQ;AACvE,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAQC,IAAR;AACE,SAAKT,eAAL;AACE,aAAO,CAAC,GAAGO,QAAJ,EAAcG,OAAd,CAAP;;AAEF,SAAKT,cAAL;AACE,aAAOS,OAAP;;AAEF,SAAKR,aAAL;AACE,aAAOQ,OAAP;;AAEF,SAAKP,eAAL;AACE,aAAOI,QAAQ,CAACI,GAAT,CAAcJ,QAAD,IAAc;AAChC,YAAIA,QAAQ,CAACK,EAAT,KAAgBF,OAAO,CAACE,EAA5B,EAAgC;AAC9B,iBAAO,EACL,GAAGL,QADE;AAEL,eAAGG;AAFE,WAAP;AAID,SALD,MAKO;AACL,iBAAOH,QAAP;AACD;AACF,OATM,CAAP;;AAWF,SAAKH,eAAL;AACE,aAAOG,QAAQ,CAACM,MAAT,CAAgB;AAAA,YAAC;AAAEC,UAAAA;AAAF,SAAD;AAAA,eAAqBA,WAAW,KAAKJ,OAAO,CAACI,WAA7C;AAAA,OAAhB,CAAP;;AACF;AACE,aAAOP,QAAP;AAzBJ;AA2BD;AAAA","sourcesContent":["import { CREATE_CATEGORY, ALL_CATEGORIES, FIND_CATEGORY, UPDATE_CATEGORT, DELETE_CATEGORY } from '../actions/types';\n\nconst initialState = [];\n\nexport default function categoryReducer(category = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case CREATE_CATEGORY:\n      return [...category, payload];\n\n    case ALL_CATEGORIES:\n      return payload;\n    \n    case FIND_CATEGORY:\n      return payload;\n\n    case UPDATE_CATEGORT:\n      return category.map((category) => {\n        if (category.id === payload.id) {\n          return {\n            ...category,\n            ...payload,\n          };\n        } else {\n          return category;\n        }\n      });\n\n    case DELETE_CATEGORY:\n      return category.filter(({ category_id }) => category_id !== payload.category_id);\n    default:\n      return category;\n  }\n};"]},"metadata":{},"sourceType":"module"}