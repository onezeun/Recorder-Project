{"ast":null,"code":"var _jsxFileName = \"/Users/modsiw/Programming/Recorder-Project/frontend/src/pages/Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Clock from 'react-live-clock';\nimport axios from 'axios';\nimport InputUnstyled from '@mui/base/InputUnstyled';\nimport { styled } from '@mui/system';\nimport { Button, Stack, Avatar, Box, ImageList, ImageListItem, IconButton, Typography, getPopoverUtilityClass, Grid } from '@mui/material';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getUser } from '../redux/actions/user';\nimport { getPost } from '../redux/actions/post';\nimport { useParams } from 'react-router-dom'; // import Fab from '@mui/material/Fab';\n// import FavoriteIcon from '@mui/icons-material/Favorite';\n// import ShareIcon from '@mui/icons-material/Share';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Post() {\n  _s();\n\n  // 댓글 입력 창 관련\n  const blue = {\n    200: '#80BFFF',\n    400: '#3399FF'\n  };\n  const grey = {\n    50: '#F3F6F9',\n    100: '#E7EBF0',\n    200: '#E0E3E7',\n    300: '#CDD2D7',\n    400: '#B2BAC2',\n    500: '#A0AAB4',\n    600: '#6F7E8C',\n    700: '#3E5060',\n    800: '#2D3843',\n    900: '#1A2027'\n  };\n  const StyledInputElement = styled('input')(_ref => {\n    let {\n      theme\n    } = _ref;\n    return `\n    width: 500px;\n    font-size: 0.875rem;\n    font-family: IBM Plex Sans, sans-serif;\n    font-weight: 400;\n    line-height: 1.5;\n    color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n    background: ${theme.palette.mode === 'dark' ? grey[900] : grey[50]};\n    border: 1px solid ${theme.palette.mode === 'dark' ? grey[800] : grey[300]};\n    border-radius: 8px;\n    padding: 12px 12px;\n    transition: all 150ms ease;\n  \n    &:hover {\n      background: ${theme.palette.mode === 'dark' ? '' : grey[100]};\n      border-color: ${theme.palette.mode === 'dark' ? grey[700] : grey[400]};\n    }\n  \n    &:focus {\n      outline: 2px solid ${theme.palette.mode === 'dark' ? blue[400] : blue[200]};\n      outline-offset: 2px;\n    }\n  `;\n  });\n  const CustomInput = /*#__PURE__*/React.forwardRef(function CustomInput(props, ref) {\n    return /*#__PURE__*/_jsxDEV(InputUnstyled, {\n      components: {\n        Input: StyledInputElement\n      },\n      ...props,\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }); // const { user: currentUser } = useSelector((state) => state.auth);\n  // const data = useSelector((state) => state.user);\n  // const [ userData, setUserData ] = useState([]);\n\n  const [postData, setPostData] = useState([]); // const dispatch = useDispatch();\n\n  const {\n    postId\n  } = useParams();\n  useEffect(() => {\n    getPosts(); // setCurrentData(getPostById(postId));\n  }, []);\n\n  function getPosts() {\n    axios.get('http://localhost:8080/board/posts/' + `${postId}`).then(res => {\n      setPostData(res.data);\n      console.log(res.data);\n    });\n  } // console.log('postData.userId', postData.userId);\n  // function getUsers() {\n  //   dispatch(getUser(postData.userId))\n  //   .then((data) => {\n  //     setUserData(data);\n  //   })\n  //   .catch((error) => {\n  //     console.error(error);\n  //   })\n  // }\n  // const getPostById = postId => {\n  //   const array = postData.filter(x => x.postId == postId);\n  //   if (array.length === 1) {\n  //     return array[0];\n  //   }\n  //   return null;\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mt: '20px',\n      width: '800px',\n      border: '1px solid pink',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      sx: {\n        py: '20px'\n      },\n      children: [postData.title, \"\\uC81C\\uBAA9 \\uB4E4\\uC5B4\\uAC08 \\uAC83\\uC784\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: '600px',\n        display: 'flex',\n        flexDirection: 'column',\n        p: 0.5,\n        alignItems: 'end'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: postData.userNickname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: '20px',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: postData.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: '500px',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'flex-start',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        alt: \"jiwoon-joo\",\n        src: postData.profilePhoto,\n        sx: {\n          width: 80,\n          height: 80,\n          mr: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 1,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: postData.domain\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h7\",\n          children: postData.introduce\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      spacing: 1,\n      sx: {\n        my: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(CustomInput, {\n        \"aria-label\": \"Demo input\",\n        placeholder: \"\\uB313\\uAE00\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        sx: {\n          backgroundColor: '#ff5f70',\n          color: 'white',\n          ':hover': {\n            bgcolor: '#ffc0cb'\n          }\n        },\n        children: \"\\uB4F1\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Post, \"wVCdP170sVNTvIz6lZOxTRJor/c=\", false, function () {\n  return [useParams];\n});\n\n_c = Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/modsiw/Programming/Recorder-Project/frontend/src/pages/Post.js"],"names":["React","useState","useEffect","Clock","axios","InputUnstyled","styled","Button","Stack","Avatar","Box","ImageList","ImageListItem","IconButton","Typography","getPopoverUtilityClass","Grid","AddCircleIcon","useSelector","useDispatch","getUser","getPost","useParams","Post","blue","grey","StyledInputElement","theme","palette","mode","CustomInput","forwardRef","props","ref","Input","postData","setPostData","postId","getPosts","get","then","res","data","console","log","mt","width","border","display","flexDirection","alignItems","py","title","p","userNickname","content","justifyContent","profilePhoto","height","mr","domain","introduce","my","backgroundColor","color","bgcolor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Clock from 'react-live-clock'\n\nimport axios from 'axios';\n\nimport InputUnstyled from '@mui/base/InputUnstyled';\nimport { styled } from '@mui/system';\nimport { Button, Stack, Avatar, Box, ImageList, ImageListItem, IconButton, Typography, getPopoverUtilityClass, Grid } from '@mui/material';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getUser } from '../redux/actions/user';\nimport { getPost } from '../redux/actions/post';\nimport { useParams } from 'react-router-dom';\n// import Fab from '@mui/material/Fab';\n// import FavoriteIcon from '@mui/icons-material/Favorite';\n// import ShareIcon from '@mui/icons-material/Share';\n\nexport default function Post() {\n\n  // 댓글 입력 창 관련\n  const blue = {\n    200: '#80BFFF',\n    400: '#3399FF',\n  };\n  const grey = {\n    50: '#F3F6F9',\n    100: '#E7EBF0',\n    200: '#E0E3E7',\n    300: '#CDD2D7',\n    400: '#B2BAC2',\n    500: '#A0AAB4',\n    600: '#6F7E8C',\n    700: '#3E5060',\n    800: '#2D3843',\n    900: '#1A2027',\n  };\n  const StyledInputElement = styled('input')(\n    ({ theme }) => `\n    width: 500px;\n    font-size: 0.875rem;\n    font-family: IBM Plex Sans, sans-serif;\n    font-weight: 400;\n    line-height: 1.5;\n    color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n    background: ${theme.palette.mode === 'dark' ? grey[900] : grey[50]};\n    border: 1px solid ${theme.palette.mode === 'dark' ? grey[800] : grey[300]};\n    border-radius: 8px;\n    padding: 12px 12px;\n    transition: all 150ms ease;\n  \n    &:hover {\n      background: ${theme.palette.mode === 'dark' ? '' : grey[100]};\n      border-color: ${theme.palette.mode === 'dark' ? grey[700] : grey[400]};\n    }\n  \n    &:focus {\n      outline: 2px solid ${theme.palette.mode === 'dark' ? blue[400] : blue[200]};\n      outline-offset: 2px;\n    }\n  `,\n  );\n  const CustomInput = React.forwardRef(function CustomInput(props, ref) {\n    return (\n      <InputUnstyled components={{ Input: StyledInputElement }} {...props} ref={ref} />\n    );\n  });\n  \n  // const { user: currentUser } = useSelector((state) => state.auth);\n  // const data = useSelector((state) => state.user);\n\n  // const [ userData, setUserData ] = useState([]);\n  const [ postData, setPostData ] = useState([]);\n\n  // const dispatch = useDispatch();\n\n  const { postId } = useParams();\n\n  useEffect(() => {\n    getPosts();\n    // setCurrentData(getPostById(postId));\n  }, []);\n\n  function getPosts() {\n    axios.get('http://localhost:8080/board/posts/' + `${postId}`)\n    .then((res) => {\n      setPostData(res.data);\n      console.log(res.data);\n    })\n  }\n\n  // console.log('postData.userId', postData.userId);\n\n  // function getUsers() {\n  //   dispatch(getUser(postData.userId))\n  //   .then((data) => {\n  //     setUserData(data);\n  //   })\n  //   .catch((error) => {\n  //     console.error(error);\n  //   })\n  // }\n  // const getPostById = postId => {\n  //   const array = postData.filter(x => x.postId == postId);\n  //   if (array.length === 1) {\n  //     return array[0];\n  //   }\n  //   return null;\n  // }\n\n  return(\n    <Box\n      sx={{\n        mt: '20px',\n        width: '800px',\n        border: '1px solid pink',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n      }}\n    >\n      {/* 타이틀 */}\n     <Typography variant=\"h4\" sx={{ py: '20px' }}>{postData.title}제목 들어갈 것임</Typography>\n\n      {/* 작성자 */}\n      <Box sx={{ \n        width: '600px',\n        display: 'flex', \n        flexDirection: 'column', \n        p: 0.5, \n        alignItems: 'end' \n        }}\n      >\n        <Typography >{postData.userNickname}</Typography>\n      </Box>\n\n      {/* 내용 */}\n      <Box\n        sx={{\n          mt: '20px',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n      {postData.content}\n      </Box>\n\n      {/* 하단 작성자 프로필사진, 이름, 설명 */}\n      <Box \n        sx={{ \n          width: '500px',\n          display: 'flex', \n          flexDirection: 'row',\n          justifyContent: 'flex-start',\n          alignItems: 'center',\n        }}\n      >\n        <Avatar alt=\"jiwoon-joo\" src={postData.profilePhoto} sx={{ width: 80, height: 80, mr: '10px' }}/>\n        <Stack spacing={1}>\n          <Typography variant=\"h6\" >{postData.domain}</Typography>\n          <Typography variant=\"h7\" >{postData.introduce}</Typography>\n        </Stack>\n      </Box>\n\n      \n      {/* 댓글 입력 */}\n      <Stack direction=\"row\" spacing={1} sx={{ my: 3 }}>\n        <CustomInput aria-label=\"Demo input\" placeholder=\"댓글을 입력해주세요\" />\n        <Button size=\"small\" sx={{ backgroundColor: '#ff5f70', color: 'white', ':hover': { bgcolor: '#ffc0cb'}}}>등록</Button>\n      </Stack>\n\n    </Box>\n  );   \n}"]},"metadata":{},"sourceType":"module"}