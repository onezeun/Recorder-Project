{"ast":null,"code":"var _jsxFileName = \"/Users/modsiw/Programming/Recorder-Project/frontend/src/components/Editor/EditorBox.js\";\nimport React from \"react\";\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:8080/board/posts\";\nexport default function EditorBox(_ref) {\n  let {\n    UserId,\n    SetContent\n  } = _ref;\n\n  function uploadAdapter(loader) {\n    return {\n      upload: () => {\n        return new Promise((resolve, reject) => {\n          const body = new FormData();\n          loader.file.then(file => {\n            body.append(\"postPhoto\", file);\n            fetch(`${API_URL}/${UserId}/postPhoto`, {\n              method: \"post\",\n              body: body\n            }).then(res => res.json()).then(res => {\n              resolve({\n                default: `${res.url}`\n              });\n            }).catch(err => {\n              reject(err);\n            });\n          });\n        });\n      }\n    };\n  }\n\n  function uploadPlugin(editor) {\n    editor.plugins.get(\"FileRepository\").createUploadAdapter = loader => {\n      return uploadAdapter(loader);\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(CKEditor, {\n    config: {\n      extraPlugins: [uploadPlugin]\n    },\n    editor: ClassicEditor,\n    onReady: editor => {// console.log( 'Editor is ready to use!', editor );\n    },\n    onChange: (event, editor) => {\n      const data = editor.getData();\n      SetContent(data);\n    },\n    onBlur: (event, editor) => {// console.log( 'Blur.', editor );\n    },\n    onFocus: (event, editor) => {// console.log( 'Focus.', editor );\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_c = EditorBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditorBox\");","map":{"version":3,"sources":["/Users/modsiw/Programming/Recorder-Project/frontend/src/components/Editor/EditorBox.js"],"names":["React","CKEditor","ClassicEditor","API_URL","EditorBox","UserId","SetContent","uploadAdapter","loader","upload","Promise","resolve","reject","body","FormData","file","then","append","fetch","method","res","json","default","url","catch","err","uploadPlugin","editor","plugins","get","createUploadAdapter","extraPlugins","event","data","getData"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;;AAEA,MAAMC,OAAO,GAAG,mCAAhB;AAEA,eAAe,SAASC,SAAT,OAA4C;AAAA,MAAxB;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAwB;;AAEvD,WAASC,aAAT,CAAuBC,MAAvB,EAA+B;AAC3B,WAAO;AACHC,MAAAA,MAAM,EAAE,MAAM;AACV,eAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,gBAAMC,IAAI,GAAG,IAAIC,QAAJ,EAAb;AACAN,UAAAA,MAAM,CAACO,IAAP,CAAYC,IAAZ,CAAkBD,IAAD,IAAU;AACvBF,YAAAA,IAAI,CAACI,MAAL,CAAY,WAAZ,EAAyBF,IAAzB;AACAG,YAAAA,KAAK,CAAE,GAAEf,OAAQ,IAAGE,MAAO,YAAtB,EAAmC;AACpCc,cAAAA,MAAM,EAAE,MAD4B;AAEpCN,cAAAA,IAAI,EAAEA;AAF8B,aAAnC,CAAL,CAICG,IAJD,CAIOI,GAAD,IAASA,GAAG,CAACC,IAAJ,EAJf,EAKCL,IALD,CAKOI,GAAD,IAAS;AACXT,cAAAA,OAAO,CAAC;AACJW,gBAAAA,OAAO,EAAG,GAAEF,GAAG,CAACG,GAAI;AADhB,eAAD,CAAP;AAGH,aATD,EAUCC,KAVD,CAUQC,GAAD,IAAS;AACZb,cAAAA,MAAM,CAACa,GAAD,CAAN;AACH,aAZD;AAaH,WAfD;AAgBH,SAlBM,CAAP;AAmBH;AArBE,KAAP;AAuBH;;AAED,WAASC,YAAT,CAAsBC,MAAtB,EAA8B;AAC1BA,IAAAA,MAAM,CAACC,OAAP,CAAeC,GAAf,CAAmB,gBAAnB,EAAqCC,mBAArC,GAA4DtB,MAAD,IAAY;AACnE,aAAOD,aAAa,CAACC,MAAD,CAApB;AACH,KAFD;AAGH;;AAED,sBACI,QAAC,QAAD;AACI,IAAA,MAAM,EAAE;AACJuB,MAAAA,YAAY,EAAE,CAACL,YAAD;AADV,KADZ;AAII,IAAA,MAAM,EAAGxB,aAJb;AAKI,IAAA,OAAO,EAAGyB,MAAM,IAAI,CAChB;AACH,KAPL;AAQI,IAAA,QAAQ,EACJ,CAAEK,KAAF,EAASL,MAAT,KAAqB;AACrB,YAAMM,IAAI,GAAGN,MAAM,CAACO,OAAP,EAAb;AACA5B,MAAAA,UAAU,CAAC2B,IAAD,CAAV;AACH,KAZL;AAaI,IAAA,MAAM,EAAG,CAAED,KAAF,EAASL,MAAT,KAAqB,CAC1B;AACH,KAfL;AAgBI,IAAA,OAAO,EAAG,CAAEK,KAAF,EAASL,MAAT,KAAqB,CAC3B;AACH;AAlBL;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH;KAxDuBvB,S","sourcesContent":["import React from \"react\";\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\n\nconst API_URL = \"http://localhost:8080/board/posts\";\n\nexport default function EditorBox ({ UserId, SetContent }) {\n\n    function uploadAdapter(loader) {\n        return {\n            upload: () => {\n                return new Promise((resolve, reject) => {\n                    const body = new FormData();\n                    loader.file.then((file) => {\n                        body.append(\"postPhoto\", file);\n                        fetch(`${API_URL}/${UserId}/postPhoto`, {\n                            method: \"post\",\n                            body: body\n                        })\n                        .then((res) => res.json())\n                        .then((res) => {\n                            resolve({\n                                default: `${res.url}`\n                            });\n                        })\n                        .catch((err) => {\n                            reject(err);\n                        });\n                    });\n                });\n            }\n        };\n    }\n\n    function uploadPlugin(editor) {\n        editor.plugins.get(\"FileRepository\").createUploadAdapter = (loader) => {\n            return uploadAdapter(loader);\n        };\n    }\n\n    return (\n        <CKEditor\n            config={{\n                extraPlugins: [uploadPlugin]\n            }}\n            editor={ ClassicEditor }\n            onReady={ editor => {\n                // console.log( 'Editor is ready to use!', editor );\n            } }\n            onChange={ \n                ( event, editor ) => {\n                const data = editor.getData();\n                SetContent(data);\n            } }\n            onBlur={ ( event, editor ) => {\n                // console.log( 'Blur.', editor );\n            } }\n            onFocus={ ( event, editor ) => {\n                // console.log( 'Focus.', editor );\n            } }\n        />\n    )\n}"]},"metadata":{},"sourceType":"module"}