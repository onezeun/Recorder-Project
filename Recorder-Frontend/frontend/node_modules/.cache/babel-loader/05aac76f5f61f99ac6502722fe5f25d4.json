{"ast":null,"code":"var _jsxFileName = \"/app/src/pages/Neighbor.js\";\nimport React from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport Box from '@mui/material/Box';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: 'id',\n  headerName: 'ID',\n  width: 20\n}, {\n  field: 'name',\n  headerName: '이름',\n  width: 150\n}, {\n  field: 'blogname',\n  headerName: '블로그명',\n  width: 300\n}, {\n  field: 'neighbor',\n  headerName: '서로이웃',\n  width: 100\n} //   {\n//     field: 'age',\n//     headerName: 'Age',\n//     type: 'number',\n//     width: 90,\n//   },\n//   {\n//     field: 'fullName',\n//     headerName: 'Full name',\n//     description: 'This column has a value getter and is not sortable.',\n//     sortable: false,\n//     width: 160,\n//     valueGetter: (params) =>\n//       `${params.row.firstName || ''} ${params.row.lastName || ''}`,\n//   },\n];\nconst rows = [{\n  id: 1,\n  name: '주지운',\n  blogname: '지운 블로그',\n  neighbor: 'O'\n}, {\n  id: 2,\n  name: '이영한',\n  blogname: 'ezerone',\n  neighbor: 'X'\n}, {\n  id: 3,\n  name: '이혜지',\n  blogname: 'modsivv',\n  neighbor: 'O'\n}, {\n  id: 4,\n  name: '한지은',\n  blogname: 'onezeun',\n  neighbor: 'O'\n}];\nexport default function Neighbor() {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      width: '100vw',\n      height: '40vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: rows,\n      columns: columns,\n      pageSize: 5,\n      rowsPerPageOptions: [5],\n      checkboxSelection: true,\n      sx: {\n        width: '660px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_c = Neighbor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Neighbor\");","map":{"version":3,"sources":["/app/src/pages/Neighbor.js"],"names":["React","DataGrid","Box","columns","field","headerName","width","rows","id","name","blogname","neighbor","Neighbor","display","flexDirection","justifyContent","alignItems","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;;AAGA,MAAMC,OAAO,GAAG,CACZ;AAAEC,EAAAA,KAAK,EAAE,IAAT;AAAeC,EAAAA,UAAU,EAAE,IAA3B;AAAiCC,EAAAA,KAAK,EAAE;AAAxC,CADY,EAEZ;AAAEF,EAAAA,KAAK,EAAE,MAAT;AAAiBC,EAAAA,UAAU,EAAE,IAA7B;AAAmCC,EAAAA,KAAK,EAAE;AAA1C,CAFY,EAGZ;AAAEF,EAAAA,KAAK,EAAE,UAAT;AAAqBC,EAAAA,UAAU,EAAE,MAAjC;AAAyCC,EAAAA,KAAK,EAAE;AAAhD,CAHY,EAIZ;AAAEF,EAAAA,KAAK,EAAE,UAAT;AAAqBC,EAAAA,UAAU,EAAE,MAAjC;AAAyCC,EAAAA,KAAK,EAAE;AAAhD,CAJY,CAMhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBgB,CAAhB;AAuBA,MAAMC,IAAI,GAAG,CACT;AAAEC,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,IAAI,EAAE,KAAf;AAAsBC,EAAAA,QAAQ,EAAE,QAAhC;AAA0CC,EAAAA,QAAQ,EAAE;AAApD,CADS,EAET;AAAEH,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,IAAI,EAAE,KAAf;AAAsBC,EAAAA,QAAQ,EAAE,SAAhC;AAA2CC,EAAAA,QAAQ,EAAE;AAArD,CAFS,EAGT;AAAEH,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,IAAI,EAAE,KAAf;AAAsBC,EAAAA,QAAQ,EAAE,SAAhC;AAA2CC,EAAAA,QAAQ,EAAE;AAArD,CAHS,EAIT;AAAEH,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,IAAI,EAAE,KAAf;AAAsBC,EAAAA,QAAQ,EAAE,SAAhC;AAA2CC,EAAAA,QAAQ,EAAE;AAArD,CAJS,CAAb;AAOA,eAAe,SAASC,QAAT,GAAoB;AACjC,sBACE,QAAC,GAAD;AACI,IAAA,EAAE,EAAE;AACAC,MAAAA,OAAO,EAAE,MADT;AAEAC,MAAAA,aAAa,EAAE,QAFf;AAGAC,MAAAA,cAAc,EAAE,YAHhB;AAIAC,MAAAA,UAAU,EAAE,QAJZ;AAKAV,MAAAA,KAAK,EAAE,OALP;AAMAW,MAAAA,MAAM,EAAE;AANR,KADR;AAAA,2BAUE,QAAC,QAAD;AACE,MAAA,IAAI,EAAEV,IADR;AAEE,MAAA,OAAO,EAAEJ,OAFX;AAGE,MAAA,QAAQ,EAAE,CAHZ;AAIE,MAAA,kBAAkB,EAAE,CAAC,CAAD,CAJtB;AAKE,MAAA,iBAAiB,MALnB;AAME,MAAA,EAAE,EAAE;AACAG,QAAAA,KAAK,EAAE;AADP;AANN;AAAA;AAAA;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;KAxBuBM,Q","sourcesContent":["import React from 'react';\n\nimport { DataGrid } from '@mui/x-data-grid';\nimport Box from '@mui/material/Box';\n\n\nconst columns = [\n    { field: 'id', headerName: 'ID', width: 20 },\n    { field: 'name', headerName: '이름', width: 150 },\n    { field: 'blogname', headerName: '블로그명', width: 300 },\n    { field: 'neighbor', headerName: '서로이웃', width: 100 },    \n\n//   {\n//     field: 'age',\n//     headerName: 'Age',\n//     type: 'number',\n//     width: 90,\n//   },\n//   {\n//     field: 'fullName',\n//     headerName: 'Full name',\n//     description: 'This column has a value getter and is not sortable.',\n//     sortable: false,\n//     width: 160,\n//     valueGetter: (params) =>\n//       `${params.row.firstName || ''} ${params.row.lastName || ''}`,\n//   },\n];\n\nconst rows = [\n    { id: 1, name: '주지운', blogname: '지운 블로그', neighbor: 'O' },\n    { id: 2, name: '이영한', blogname: 'ezerone', neighbor: 'X' },\n    { id: 3, name: '이혜지', blogname: 'modsivv', neighbor: 'O' },\n    { id: 4, name: '한지은', blogname: 'onezeun', neighbor: 'O' },\n];\n\nexport default function Neighbor() {\n  return (\n    <Box \n        sx={{ \n            display: 'flex',\n            flexDirection: 'column', \n            justifyContent: 'flex-start',\n            alignItems: 'center',\n            width: '100vw',\n            height: '40vh',\n        }}\n    >\n      <DataGrid\n        rows={rows}\n        columns={columns}\n        pageSize={5}\n        rowsPerPageOptions={[5]}\n        checkboxSelection\n        sx={{ \n            width: '660px',\n        }}\n      />\n    </Box>    \n  );\n}"]},"metadata":{},"sourceType":"module"}