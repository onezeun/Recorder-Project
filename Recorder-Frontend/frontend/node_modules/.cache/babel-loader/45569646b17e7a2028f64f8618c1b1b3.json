{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8080/api/auth/';\n\nconst register = (email, password, nickname, domain, introduce) => {\n  return axios.post(API_URL + 'signup', {\n    email,\n    password,\n    nickname,\n    domain,\n    introduce\n  }).catch(error => {\n    console.error(error);\n  });\n};\n\nconst login = (email, password) => {\n  console.log('login start');\n  return axios.post(API_URL + 'signin', {\n    email,\n    password\n  }).then(response => {\n    if (response.data.accessToken) {\n      localStorage.setItem('user', JSON.stringify(response.data));\n    }\n\n    console.log('response.data', response.data);\n    return response.data;\n  }).catch(error => {\n    console.error(error);\n  });\n};\n\nconst logout = () => {\n  localStorage.removeItem('user');\n};\n\nconst getCurrentUser = () => {\n  return JSON.parse(localStorage.getItem('user'));\n};\n\nconst registerPost = (userId, categoryId, title, content) => {\n  return axios.post('http://localhost:8080/board/posts', {\n    userId,\n    categoryId,\n    title,\n    content\n  }).catch(error => {\n    console.error(error);\n  });\n};\n\nconst getCategory = (categoryId, categoryName) => {\n  return axios.get('http://localhost:8080/board/categories/users/1', {\n    categoryId,\n    categoryName\n  }).catch(error => {\n    console.error(error);\n  });\n};\n\nconst AuthService = {\n  register,\n  login,\n  logout,\n  getCurrentUser,\n  registerPost,\n  getCategory\n};\nexport default AuthService;","map":{"version":3,"sources":["/Users/modsiw/Programming/Recorder-Project/frontend/src/services/auth.service.js"],"names":["axios","API_URL","register","email","password","nickname","domain","introduce","post","catch","error","console","login","log","then","response","data","accessToken","localStorage","setItem","JSON","stringify","logout","removeItem","getCurrentUser","parse","getItem","registerPost","userId","categoryId","title","content","getCategory","categoryName","get","AuthService"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,iCAAhB;;AAEA,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,QAAR,EAAkBC,QAAlB,EAA4BC,MAA5B,EAAoCC,SAApC,KAAkD;AACjE,SAAOP,KAAK,CACTQ,IADI,CACCP,OAAO,GAAG,QADX,EACqB;AACxBE,IAAAA,KADwB;AAExBC,IAAAA,QAFwB;AAGxBC,IAAAA,QAHwB;AAIxBC,IAAAA,MAJwB;AAKxBC,IAAAA;AALwB,GADrB,EAQJE,KARI,CAQGC,KAAD,IAAW;AAChBC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD,GAVI,CAAP;AAWD,CAZD;;AAcA,MAAME,KAAK,GAAG,CAACT,KAAD,EAAQC,QAAR,KAAqB;AACjCO,EAAAA,OAAO,CAACE,GAAR,CAAY,aAAZ;AACA,SAAOb,KAAK,CACTQ,IADI,CACCP,OAAO,GAAG,QADX,EACqB;AACxBE,IAAAA,KADwB;AAExBC,IAAAA;AAFwB,GADrB,EAKJU,IALI,CAKEC,QAAD,IAAc;AAClB,QAAIA,QAAQ,CAACC,IAAT,CAAcC,WAAlB,EAA+B;AAC7BC,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeN,QAAQ,CAACC,IAAxB,CAA7B;AACD;;AACDL,IAAAA,OAAO,CAACE,GAAR,CAAY,eAAZ,EAA6BE,QAAQ,CAACC,IAAtC;AACA,WAAOD,QAAQ,CAACC,IAAhB;AACD,GAXI,EAYJP,KAZI,CAYGC,KAAD,IAAW;AAChBC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD,GAdI,CAAP;AAeD,CAjBD;;AAmBA,MAAMY,MAAM,GAAG,MAAM;AACnBJ,EAAAA,YAAY,CAACK,UAAb,CAAwB,MAAxB;AACD,CAFD;;AAIA,MAAMC,cAAc,GAAG,MAAM;AAC3B,SAAOJ,IAAI,CAACK,KAAL,CAAWP,YAAY,CAACQ,OAAb,CAAqB,MAArB,CAAX,CAAP;AACD,CAFD;;AAIA,MAAMC,YAAY,GAAG,CAACC,MAAD,EAASC,UAAT,EAAqBC,KAArB,EAA4BC,OAA5B,KAAwC;AAC3D,SAAO/B,KAAK,CACXQ,IADM,CACD,mCADC,EACoC;AACzCoB,IAAAA,MADyC;AAEzCC,IAAAA,UAFyC;AAGzCC,IAAAA,KAHyC;AAIzCC,IAAAA;AAJyC,GADpC,EAMHtB,KANG,CAMIC,KAAD,IAAW;AACnBC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD,GARM,CAAP;AASD,CAVD;;AAYA,MAAMsB,WAAW,GAAG,CAACH,UAAD,EAAaI,YAAb,KAA8B;AAChD,SAAOjC,KAAK,CACXkC,GADM,CACF,gDADE,EACgD;AACrDL,IAAAA,UADqD;AAErDI,IAAAA;AAFqD,GADhD,EAIHxB,KAJG,CAIIC,KAAD,IAAW;AACnBC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD,GANM,CAAP;AAOD,CARD;;AAUA,MAAMyB,WAAW,GAAG;AAClBjC,EAAAA,QADkB;AAElBU,EAAAA,KAFkB;AAGlBU,EAAAA,MAHkB;AAIlBE,EAAAA,cAJkB;AAKlBG,EAAAA,YALkB;AAMlBK,EAAAA;AANkB,CAApB;AASA,eAAeG,WAAf","sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:8080/api/auth/';\n\nconst register = (email, password, nickname, domain, introduce) => {\n  return axios\n    .post(API_URL + 'signup', {\n      email,\n      password,\n      nickname,\n      domain,\n      introduce,\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n};\n\nconst login = (email, password) => {\n  console.log('login start');\n  return axios\n    .post(API_URL + 'signin', {\n      email,\n      password,\n    })\n    .then((response) => {\n      if (response.data.accessToken) {\n        localStorage.setItem('user', JSON.stringify(response.data));\n      }\n      console.log('response.data', response.data);\n      return response.data;\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n};\n\nconst logout = () => {\n  localStorage.removeItem('user');\n};\n\nconst getCurrentUser = () => {\n  return JSON.parse(localStorage.getItem('user'));\n};\n\nconst registerPost = (userId, categoryId, title, content) => {\n  return axios\n  .post('http://localhost:8080/board/posts', {\n    userId,\n    categoryId,\n    title,\n    content\n  }) .catch((error) => {\n    console.error(error);\n  });\n};\n\nconst getCategory = (categoryId, categoryName) => {\n  return axios\n  .get('http://localhost:8080/board/categories/users/1', {\n    categoryId,\n    categoryName\n  }) .catch((error) => {\n    console.error(error);\n  });\n}\n\nconst AuthService = {\n  register,\n  login,\n  logout,\n  getCurrentUser,\n  registerPost,\n  getCategory\n};\n\nexport default AuthService;\n"]},"metadata":{},"sourceType":"module"}